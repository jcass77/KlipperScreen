######################################################################
# Disable steppers individually
######################################################################

[gcode_macro DISABLE_STEPPER_X]
gcode:
  M84 X

[gcode_macro DISABLE_STEPPER_Y]
gcode:
  M84 Y


######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.

[gcode_macro START_PRINT]
gcode:
    # Skew calibration based on https://vector3d.co.uk/product/calilantern/
    SKEW_PROFILE LOAD=calilantern_skew_profile

    # Load default bed mesh profile
    #https://www.klipper3d.org/Bed_Mesh.html?h=bed+mesh#loading-the-default-profile
    BED_MESH_PROFILE LOAD=default
    
    # Make sure paused state is fresh for each print
    # https://www.klipper3d.org/G-Codes.html?h=resume#clear_pause
    CLEAR_PAUSE
    
    # Start heaters
    {% set BED_TEMP = params.BED_TEMP|default(70)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(240)|float %}
    M140 S{BED_TEMP}  ; set final bed temp
    M104 S{EXTRUDER_TEMP} ; set final nozzle temp

    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0

    G90 ; use absolute coordinates
    M83 ; extruder relative mode
    
    G28 X0 Y0 Z  ; Home X and Y if un-homed. Always home Z to prevent crashing into bed.
    G1 Z5 F240
    G1 X2 Y10 F3000

    # Wait for target temperatures
    M190 S{BED_TEMP} ; wait for bed temp to stabilise
    M109 S{EXTRUDER_TEMP} ; wait for nozzle temp to stabilise

    # Prime the nozzle
    G1 Z0.28 F240
    G92 E0
    G1 Y140 E10 F1500
    G1 X5 F5000
    G92 E0
    G1 Y10 E10 F1200
    G92 E0
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X9.6 Y10 Z0.2 F5000.0 ; Move over to prevent blob squish

[gcode_macro END_PRINT]
gcode:
    {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
    # Relative XYZE
    G91

    # Retract filament, move Z slightly upwards
    G1 Z+25 E-5 F4500

    M140 S0 ; turn off heatbed
    M104 S0 ; turn off temperature
    M107 ; turn off fan

    # Absolute XYZE
    G90

    # Present print
    G0 X{client.custom_park_x} Y{client.custom_park_y} F1500

    # Disable all steppers except Z
    M84 X Y E

    SET_SKEW CLEAR=1


######################################################################
# Load / Unload Filament
######################################################################
[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
    {% set speed = params.SPEED|default(client.speed_retract)|default(35) %}
    SAVE_GCODE_STATE NAME=unload_state
    _CLIENT_RETRACT LENGTH=-5 SPEED={speed / 2|float|abs}
    _CLIENT_RETRACT LENGTH=-40 SPEED={speed|float|abs}
    RESTORE_GCODE_STATE NAME=unload_state


[gcode_macro LOAD_FILAMENT]
gcode:
    {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
    {% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}
    SAVE_GCODE_STATE NAME=load_state
    _CLIENT_EXTRUDE LENGTH=5 SPEED={speed / 2|float|abs}
    _CLIENT_EXTRUDE LENGTH=45 SPEED={speed|float|abs}
    _CLIENT_EXTRUDE LENGTH=10 SPEED={speed / 2|float|abs}
    RESTORE_GCODE_STATE NAME=load_state


######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the pause position, and unload the filament. After filament
# has been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro FILAMENT_CHANGE]
gcode:
    {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
    SAVE_GCODE_STATE NAME=filament_change_state
    PAUSE X={client.custom_park_x} Y={client.custom_park_y} Z_MIN=50
    UNLOAD_FILAMENT
    RESTORE_GCODE_STATE NAME=filament_change_state


[gcode_macro M600]
gcode:
    FILAMENT_CHANGE


######################################################################
# Pause Print
######################################################################
# M601: Pause Print. Wrapper around Klipper's 'PAUSE' command. Useful
# for use with PrusaSlicer's 'Add pause print' at a specific layer
# height feature.

[gcode_macro M601]
gcode:
    PAUSE

    
######################################################################
# Override Klipper's mesh calibration to also include levelling the gantry
# Source: https://docs.mainsail.xyz/configuration#example
######################################################################
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BASE_BED_MESH_CALIBRATE
gcode:
    # Start heaters so long, assuming we'll want to start printing soon. Use low enough temperature to prevent oozing.
    M140 S60  ; Bed
    M104 S180 ; Extruder

    MECHANICAL_GANTRY_CALIBRATION
    BED_MESH_CLEAR
    BASE_BED_MESH_CALIBRATE

    # Move toolhead to starting position
    G1 Z5 F240
    G1 X2 Y10 F3000


######################################################################
# Override M117 command with rawparams
# Source: https://github.com/Klipper3d/klipper/blob/master/config/sample-macros.cfg
######################################################################

# The macro below will override the default M117 command to echo the message.
#
# It uses the rawparams pseudo-variable that contains the full unparsed
# parameters that was passed to the M117 command.
#
# As this can include comments, we are trimming the text when a `;` or `#` is
# found, and escaping any existing `"`

# Load required modules
[respond]  # https://www.klipper3d.org/G-Codes.html?h=respond#respond
[display_status]  # https://www.klipper3d.org/G-Codes.html?h=display_status#display_status

[gcode_macro M117]
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}
