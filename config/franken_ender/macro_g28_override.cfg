## https://github.com/vladbabii/klipper.macro.g28_override
##
## 0 - not homed
## 1 - real homed
## 2 - fake home

[force_move]
enable_force_move: True
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false.

######################################################################
# Configure homing overrides
######################################################################
[gcode_macro _HOMING_CONFIG]
variable_order: "x,y,z"
variable_start_zhop: 10
gcode:
  {action_respond_info("Homing config updated!")}


[gcode_macro HOMING_STATUS]
variable_x: 0
variable_y: 0
variable_z: 0
#not-supported# variable_e: 0
gcode:
  {action_respond_info("Homing status: 0=not homed, 1=real homed, 2=fake homed")}
  RESPOND PREFIX="info" MSG=" X: {printer['gcode_macro HOMING_STATUS'].x}"
  RESPOND PREFIX="info" MSG=" Y: {printer['gcode_macro HOMING_STATUS'].y}"
  RESPOND PREFIX="info" MSG=" Z: {printer['gcode_macro HOMING_STATUS'].z}"
  #not-supported#  RESPOND PREFIX="info" MSG=" E: {printer['gcode_macro HOMING_STATUS'].e}"


[gcode_macro FORCE_HOME]
gcode:
  {action_respond_info("Force homing all...")}
  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=x VALUE=0
  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=y VALUE=0
  SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=z VALUE=0

  G28
  

[gcode_macro SET_KINEMATIC_POSITION]
rename_existing: REAL_SET_KINEMATIC_POSITION
gcode:
  {% if params.X is defined %}
    RESPOND PREFIX="info" MSG="SET_KINEMATIC_POSITION > X={params.X}"
    REAL_SET_KINEMATIC_POSITION X={params.X}
    SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=x VALUE=2
  {% endif %}
  
  {% if params.Y is defined %}
    RESPOND PREFIX="info" MSG="SET_KINEMATIC_POSITION > Y={params.Y}"
    REAL_SET_KINEMATIC_POSITION Y={params.Y}
    SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=y VALUE=2
  {% endif %}
  
  {% if params.Z is defined %}
    RESPOND PREFIX="info" MSG="SET_KINEMATIC_POSITION > Z={params.Z}"
    REAL_SET_KINEMATIC_POSITION Z={params.Z}
    SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=z VALUE=2
  {% endif %}


[gcode_macro _HOMING_NOW]
variable_x: 0
variable_y: 0
variable_z: 0
gcode:
  RESPOND PREFIX="info" MSG="Homing > Updating variables..."

   
[gcode_macro G28]
rename_existing: G28.1
gcode:
  SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=x VALUE=0
  SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=y VALUE=0
  SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=z VALUE=0
  
  {% set status_x = printer['gcode_macro HOMING_STATUS'].x|int %}
  {% set status_y = printer['gcode_macro HOMING_STATUS'].y|int %}
  {% set status_z = printer['gcode_macro HOMING_STATUS'].z|int %}

  {% set axis = printer['gcode_macro _HOMING_CONFIG'].order.split(',') %}
  
  {% for i in axis %}
    {% set i = i|upper %}
    # RESPOND PREFIX="info" MSG="Home > Checking {i}"
    
    {% if i=="X" %}
       {% if params.X is defined %}
        RESPOND PREFIX="info" MSG="Home > X is defined - {params.X}"
        {% if params.X|string=="0" and status_x==1 %}
          RESPOND PREFIX="info" MSG="Home > Skipping X (already homed)"
        {% else %}
          RESPOND PREFIX="info" MSG="Home > Homing X"
          SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=x VALUE=1
        {% endif %}
      {%else%}
        RESPOND PREFIX="info" MSG="Home > X is NOT defined"
      {% endif %}
    {% endif %}

    {% if i=="Y" %}
      {% if params.Y is defined %}
        RESPOND PREFIX="info" MSG="Home > Y is defined - {params.Y}"
        {% if params.Y|string=="0" and status_y==1 %}
          RESPOND PREFIX="info" MSG="Home > Skipping Y (already homed)"
        {% else %}
          RESPOND PREFIX="info" MSG="Home > Homing Y"
          SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=y VALUE=1
        {% endif %}
      {% else %}
        RESPOND PREFIX="info" MSG="Home > Y is NOT defined"
      {% endif %}
    {% endif %}

    {% if i=="Z" %}
      {% if params.Z is defined %}
        RESPOND PREFIX="info" MSG="Home > Z is defined - {params.Z}"
        {% if params.Z|string=="0" and status_z==1 %}
          RESPOND PREFIX="info" MSG="Home > Skipping Z (already homed)"
        {% else %}
          RESPOND PREFIX="info" MSG="Home > Homing Z"
          SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=z VALUE=1
        {% endif %}
      {% else %}  
        RESPOND PREFIX="info" MSG="Home > Z is NOT defined"
      {% endif %}
    {% endif %}

  {% endfor %}

  {% if ( params.X is not defined ) and ( params.Y is not defined ) and ( params.Z is not defined ) %}
    RESPOND PREFIX="info" MSG="Home > No parameters for home given, doing all configured axis {printer['gcode_macro _HOMING_CONFIG'].order}"
    SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=x VALUE=1
    SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=y VALUE=1
    SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=z VALUE=1 
  {% endif %}

  _CHECK_HOMING_DEPENDENCIES


[gcode_macro _CHECK_HOMING_DEPENDENCIES]
gcode:
  {% set axis = printer['gcode_macro _HOMING_CONFIG'].order.split(',') %}
  ## check do_width
  {% for i in axis %}
    {% set i = i|upper %}
    RESPOND PREFIX="info" MSG="Home > Checking dependency for {i} {x} {y} {z}"
    
    {% if i=="X" and printer['gcode_macro _HOMING_NOW'].x|int==1 %}
      {% if printer['gcode_macro _HOMING_CONFIG'].dowith_x is defined %}
        RESPOND PREFIX="info" MSG="Home > Checking dependency dowith X"
        {% set list = printer['gcode_macro _HOMING_CONFIG'].dowith_x.split(',') %}
        {% for j in list %}
          RESPOND PREFIX="info" MSG="Home > Checking dependency > {j}" 
          {% if (j|upper=="Y" and printer['gcode_macro _HOMING_NOW'].y|int==0) %}
            SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=y VALUE=1
            RESPOND PREFIX="info" MSG="Home > Also homing {j|upper} due to dependency from {i}"
          {% endif %}
          {% if (j|upper=="Z" and printer['gcode_macro _HOMING_NOW'].z|int==0) %}
            SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=z VALUE=1
            RESPOND PREFIX="info" MSG="Home > Also homing {j|upper} due to dependency from {i}"
          {% endif %}
        {% endfor %}
      {% endif %}
    {% endif %}

    {% if i=="Y" and printer['gcode_macro _HOMING_NOW'].y|int==1 %}
      {% if printer['gcode_macro _HOMING_CONFIG'].dowith_y is defined %}
        RESPOND PREFIX="info" MSG="Home > Checking dependency dowith Y"
        {% set list = printer['gcode_macro _HOMING_CONFIG'].dowith_y.split(',') %}
        {% for j in list %}
          RESPOND PREFIX="info" MSG="Home > Checking dependency > {j}" 
          {% if (j|upper=="X" and printer['gcode_macro _HOMING_NOW'].x|int==0) %}
            SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=x VALUE=1
            RESPOND PREFIX="info" MSG="Home > Also homing {j|upper} due to dependency from {i}"
          {% endif %}
          {% if (j|upper=="Z" and printer['gcode_macro _HOMING_NOW'].z|int==0) %}
            SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=z VALUE=1
            RESPOND PREFIX="info" MSG="Home > Also homing {j|upper} due to dependency from {i}"
          {% endif %}
        {% endfor %}
      {% endif %}
    {% endif %}

    {% if i=="Z" and printer['gcode_macro _HOMING_NOW'].z|int==1 %}
      {% if printer['gcode_macro _HOMING_CONFIG'].dowith_z is defined %}
        RESPOND PREFIX="info" MSG="Home > Checking dependency dowith Z"
        {% set list = printer['gcode_macro _HOMING_CONFIG'].dowith_z.split(',') %}
        {% for j in list %}
          RESPOND PREFIX="info" MSG="Home > Checking dependency > {j}" 
          {% if (j|upper=="Y" and printer['gcode_macro _HOMING_NOW'].y|int==0) %}
            SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=y VALUE=1
            RESPOND PREFIX="info" MSG="Home > Also homing {j|upper} due to dependency from {i}"
          {% endif %}
          {% if (j|upper=="X" and printer['gcode_macro _HOMING_NOW'].x|int==0) %}
            SET_GCODE_VARIABLE MACRO=_HOMING_NOW VARIABLE=x VALUE=1
            RESPOND PREFIX="info" MSG="Home > Also homing {j|upper} due to dependency from {i}"
          {% endif %}
        {% endfor %}
      {% endif %}
    {% endif %}

  {% endfor %}

  _CHECK_HOMING_REQUIRED
  

[gcode_macro _CHECK_HOMING_REQUIRED]
gcode:
  ## show in console what will be homed
  {% if printer['gcode_macro _HOMING_NOW'].x|int==0 and printer['gcode_macro _HOMING_NOW'].y|int==0 and printer['gcode_macro _HOMING_NOW'].z|int==0 %}

     RESPOND PREFIX="info" MSG="Home > Nothing to home, all requested axis are already homed"

  {% else %}
    {% set axis = printer['gcode_macro _HOMING_CONFIG'].order.split(',') %}
   
    {% for i in axis %}
      {% set i = i|upper %}
      {% if i=="X" and printer['gcode_macro _HOMING_NOW'].x|int==1 %}
        RESPOND PREFIX="info" MSG="Home > {i}"
      {% endif %}
      {% if i=="Y" and printer['gcode_macro _HOMING_NOW'].y|int==1 %}
        RESPOND PREFIX="info" MSG="Home > {i}"
      {% endif %}
      {% if i=="Z" and printer['gcode_macro _HOMING_NOW'].z|int==1 %}
        RESPOND PREFIX="info" MSG="Home > {i}"
      {% endif %}
    {% endfor %}

    _DO_HOME

  {% endif %}


[gcode_macro _DO_ZHOP]
gcode:
  #{% if printer['gcode_macro _HOMING_NOW'].x|int==1 or printer['gcode_macro _HOMING_NOW'].y|int==1 or printer['gcode_macro _HOMING_NOW'].z|int==1 %}
    {% if printer['gcode_macro _HOMING_CONFIG'].start_zhop is defined and printer['gcode_macro _HOMING_CONFIG'].start_zhop|int>0 %}
      {% if printer['gcode_macro HOMING_STATUS'].z|int != 1 %}
        RESPOND PREFIX="info" MSG="Home > Fake homing Z so it can move down prior to homing"
        REAL_SET_KINEMATIC_POSITION Z=0
      {% endif %}
      RESPOND PREFIX="info" MSG="Home > Moving up {printer['gcode_macro _HOMING_CONFIG'].start_zhop} mm before homing"
      G91
      G0 Z{printer['gcode_macro _HOMING_CONFIG'].start_zhop|int}
      G90
    {% else %}
      RESPOND PREFIX="error" MSG="Home > 'start_zhop' must be defined!"
      M112
    {% endif %}
  #{% endif %}


[gcode_macro _DO_HOME]
gcode:
  {% set axis = printer['gcode_macro _HOMING_CONFIG'].order.split(',') %}
  
  ## z hop first
  _DO_ZHOP

  ## actual homing
  {% for i in axis %}
    {% set i = i|upper %}
    
    {% if i=="X" and printer['gcode_macro _HOMING_NOW'].x|int==1 %}
      RESPOND PREFIX="info" MSG="Home > {i} > Homing"
      _HOME_X
      SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=x VALUE=1
    {% endif %}

    {% if i=="Y" and printer['gcode_macro _HOMING_NOW'].y|int==1 %}
      RESPOND PREFIX="info" MSG="Home > {i} > Homing"
      _HOME_Y
      SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=y VALUE=1
    {% endif %}

    {% if i=="Z" and printer['gcode_macro _HOMING_NOW'].z|int==1 %}
      RESPOND PREFIX="info" MSG="Home > {i} > Homing"
      _HOME_Z
      SET_GCODE_VARIABLE MACRO=HOMING_STATUS VARIABLE=z VALUE=1
    {% endif %}
  
  {% endfor %}

[gcode_macro _HOME_X]
gcode:
  G28.1 X


[gcode_macro _HOME_Y]
gcode:
  G28.1 Y


[gcode_macro _HOME_Z]
gcode:
  G28.1 Z
  _DO_ZHOP ; Always lift toolhead after homing Z
